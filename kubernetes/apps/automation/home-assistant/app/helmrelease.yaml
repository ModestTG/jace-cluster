---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.1.0/charts/other/app-template/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: automation
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        statefulset:
          volumeClaimTemplates:
            - name: config
              globalMounts:
                - path: /config
              accessMode: ReadWriteOnce
              size: 5Gi
              storageClass: longhorn-apps
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.9
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: home-assistant-secret
        containers:
          home-assistant:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2024.5.5@sha256:f27154dd525a6bd36f9a27af470c0862dedc270d8ef7d4b3f49f59d80b433617
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
              POSTGRES_HOST: postgres-rw.database.svc.cluster.local
              POSTGRES_DB: home_assistant
            envFrom: *envFrom
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
          codeserver:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.89.1
              pullPolicy: IfNotPresent
            env:
              TZ: "${TIMEZONE}"
            args:
              - --auth
              - "none"
              - --user-data-dir
              - "/config/.vscode"
              - --extensions-dir
              - "/config/.vscode"
              - "/config"
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            securityContext:
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: OnRootMismatch
    service:
      home-assistant:
        controller: main
        ports:
          http:
            port: 8123
      codeserver:
        controller: main
        ports:
          http:
            port: 8080
    ingress:
      home-assistant:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          hajimari.io/icon: mdi:home-assistant
        hosts:
          - host: &host "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: home-assistant
                  port: http
        tls:
          - hosts:
            - *host
      codeserver:
        className: internal
        annotations:
          hajimari.io/appName: "Hass Config"
          hajimari.io/icon: cib:visual-studio-code
        hosts:
          - host: &host "hass-code.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: codeserver
                  port: http
        tls:
          - hosts:
              - *host
    defaultPodOptions:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
