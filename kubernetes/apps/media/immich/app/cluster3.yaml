# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/postgresql.cnpg.io/cluster_v1.json
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: pg-immich-vchord
  namespace: database
spec:
  instances: 3
  # No imageName means use latest image
  imageName: ghcr.io/tensorchord/cloudnative-vectorchord:14-0.3.0
  primaryUpdateStrategy: unsupervised
  # bootstrap:
  #   recovery:
  #     source: &previous-cluster pg-immich-vchord #This must match backup.barmanObjectStore.serverName from previous backup
  bootstrap:
    initdb:
      import:
        type: monolith
        databases:
          - immich
        roles:
          - immich
        source:
          externalCluster: pg-immich-replica
  postgresql:
    shared_preload_libraries:
      - "vchord.so"
  storage:
    size: 5Gi
    storageClass: local-path
  enableSuperuserAccess: true
  superuserSecret:
    name: cnpg-superuser
  monitoring:
    enablePodMonitor: true
  backup:
    barmanObjectStore:
      destinationPath: &dest-path s3://pg-immich/
      endpointURL: &endpoint-url ${AWS_ENDPOINTS}
      serverName: pg-immich-vchord #This must increment when bootstrapping. You cannot have this be the same as the bootstrap version
      s3Credentials: &s3-creds
        accessKeyId:
          name: cnpg-s3-creds
          key: AWS_KEY_ID
        secretAccessKey:
          name: cnpg-s3-creds
          key: AWS_SECRET_KEY
    retentionPolicy: "30d"
  externalClusters:
    - name: pg-immich-replica
      connectionParameters:
        host: pg-immich-replica-rw.database.svc.cluster.local
        user: postgres
        dbname: postgres
        sslmode: require
      password:
        name: cnpg-superuser
        key: password
    # - name: *previous-cluster
    #   barmanObjectStore:
    #     wal:
    #       compression: bzip2
    #       maxParallel: 8
    #     destinationPath: *dest-path
    #     endpointURL: *endpoint-url
    #     s3Credentials: *s3-creds
    #
