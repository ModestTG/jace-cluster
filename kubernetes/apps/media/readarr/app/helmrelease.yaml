# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app readarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      readarr:
        type: statefulset
        annotations:
          secret.reloader.stakater.com/reload: &secret readarr-secret
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.9
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: *secret
        containers:
          readarr:
            image:
              repository: ghcr.io/onedr0p/readarr-develop
              tag: 0.3.27.2538
            env:
              TZ: ${TIMEZONE}
              READARR__INSTANCE_NAME: Readarr
              READARR__PORT: &port 80
              READARR__LOG_LEVEL: info
              READARR__AUTHENTICATION_METHOD: None
              READARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__ANALYTICS_ENABLED: "False"
              COMPlus_EnableDiagnostics: "0"
            envFrom:
            - secretRef:
                name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
        - host: "readarr.${SECRET_DOMAIN}"
          paths:
          - path: /
            service:
              identifier: app
              port: http
    persistence:
      config:
        existingClaim: readarr-config
      tmp:
        type: emptyDir
      data:
        type: nfs
        server: ${SECRET_NFS_SERVER}
        path: /mnt/PlexPool
        globalMounts:
        - path: /media
