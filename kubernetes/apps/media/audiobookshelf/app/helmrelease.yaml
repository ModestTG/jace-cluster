# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: audiobookshelf
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        containers:
          audiobookshelf:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.17.2
              pullPolicy: IfNotPresent
            env:
              TZ: ${TIMEZONE}
              AUDIOBOOKSHELF_UID: 1000
              AUDIOBOOKSHELF_GID: 1000
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
    service:
      audiobookshelf:
        controller: main
        ports:
          http:
            port: 80
    ingress:
      audiobookshelf:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          hajimari.io/icon: "mdi:book-music"
        hosts:
          - host: &host audiobookshelf.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: audiobookshelf
                  port: http
        tls:
          - hosts:
            - *host
    persistence:
      config:
        existingClaim: audiobookshelf-config
        globalMounts:
          - path: /config
      audiobooks:
        type: nfs
        server: ${SECRET_NFS_SERVER}
        path: /mnt/AuxPool/K8S-NFS/audiobookshelf/audiobooks
        globalMounts:
          - path: /audiobooks
      podcasts:
        type: nfs
        server: ${SECRET_NFS_SERVER}
        path: /mnt/AuxPool/K8S-NFS/audiobookshelf/podcasts
        globalMounts:
          - path: /podcasts
      backups:
        type: nfs
        server: ${SECRET_NFS_SERVER}
        path: /mnt/AuxPool/K8S-NFS/audiobookshelf/backups
        globalMounts:
          - path: /config/metadata/backups
      cache:
        type: emptyDir
        globalMounts:
          - path: /.npm
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
